name: Publish Artifacts

on:
  workflow_run:
    workflows: ["CMake Windows"]
    types: [completed]
    # make sure this only runs on the default branch
    branches: [master, main, "release/*", "test-release"]
  workflow_dispatch:

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      IS_TAGGED: ${{ steps.is-rel.outputs.IS_TAGGED }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # allows for tags access
      - name: Check Release
        id: is-rel
        run: |
          set +e;
          git describe --exact-match --match 'v*' &> /dev/null;
          echo "IS_TAGGED=$?" >> "$GITHUB_OUTPUT";
        shell: bash

  do-release:
    runs-on: ubuntu-latest
    needs: [check-release]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # allows for tags access

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v9
        with:
          workflow: build.yml
          name_is_regexp: true
          path: build/

      - name: Flatten Directories
        working-directory: build
        run: |
          for file in */ ; do 
            mv "$file$(find "$file" -type f -printf '%f')" ".tmp.${file%/}";
            rm -rf "$file";
            mv ".tmp.${file%/}" "${file%/}";
          done
        shell: bash

      - name: Dry Run
        if: ${{ needs.check-release.outputs.IS_TAGGED != '0' }}
        run: |
          echo "Dry Run"
          echo "========================================"
          echo "Files:"
          ls -la build

      - name: Get Tag
        id: get-tag
        if: ${{ needs.check-release.outputs.IS_TAGGED == '0' }}
        run: echo "VALUE=$(git describe --exact-match --match 'v*')" >> "$GITHUB_OUTPUT"

      - name: Create release
        uses: ncipollo/release-action@v1.14.0
        if: ${{ needs.check-release.outputs.IS_TAGGED == '0' }}
        with:
          replacesArtifacts: true
          allowUpdates: true
          artifactErrorsFailBuild: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          artifacts: "build/*"
          name: ${{ steps.get-tag.outputs.VALUE }}
          tag: ${{ steps.get-tag.outputs.VALUE }}
